from django.contrib.auth import get_user_model
from django.test import TestCase

from AdoptSquad.forum.forms import PostBaseForm

UserModel = get_user_model()


class TestPostForm(TestCase):
    def setUp(self):
        long_title = ('12345678901234567890123456789012345678901234567890123456789012345678901234567890123456789'
                      '012345678901234567890123456789012345678901234567890123456789012345678901234567890')

        long_content = ('1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678'
                        '9123456789012345678901234567890123456789012345678901234567890123456789012345678901234567'
                        '8912345678901234567890123456789012345678901234567890123456789012345678901234567890123456'
                        '7891234567890123456789012345678901234567890123456789012345678901234567890123456789012345'
                        '6789123456789012345678901234567890123456789012345678901234567890123456789012345678901234'
                        '5678912345678901234567890123456789012345678901234567890123456789012345678901234567890123'
                        '4567891234567890123456789012345678901234567890123456789012345678901234567890123456789012'
                        '3456789123456789012345678901234567890123456789012345678901234567890123456789012345678901'
                        '23456789123456789012345678901234567890123456789012345678901234567890123456789012345678901'
                        '23456789123456789012345678901234567890123456789012345678901234567890123456789012345678901'
                        '23456789123456789012345678901234567890123456789012345678901234567890123456789012345678901'
                        '7891234567890123456789012345678901234567890123456789012345678901234567890123456789012345'
                        '7891234567890123456789012345678901234567890123456789012345678901234567890123456789012345'
                        '7891234567890123456789012345678901234567890123456789012345678901234567890123456789012345'
                        '7891234567890123456789012345678901234567890123456789012345678901234567890123456789012345'
                        '7891234567890123456789012345678901234567890123456789012345678901234567890123456789012345'
                        )

        valid_title = 'test title'
        valid_content = 'test content'

        self.invalid_data_1 = {
            'title': long_title,
            'content': valid_content,
        }

        self.invalid_data_2 = {
            'title': valid_title,
            'content': long_content,

        }

        self.valid_data = {
            'title': valid_title,
            'content': valid_content,
        }

        self.user = UserModel.objects.create_user(username='test_user', password='password_test1234',
                                                  email='Test@email.email')
        self.client.login(username='test_user', password='password_test1234')

    def test__is_valid__expects_true(self):
        PostForm = PostBaseForm(data=self.valid_data)
        PostForm.is_valid()
        self.assertTrue(PostForm.is_valid())

    def test__is_valid__expects_false(self):
        PostForm = PostBaseForm(data=self.invalid_data_1)
        PostForm.is_valid()
        self.assertFalse(PostForm.is_valid())

        PostForm = PostBaseForm(data=self.invalid_data_2)
        PostForm.is_valid()
        self.assertFalse(PostForm.is_valid())
